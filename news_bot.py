import asyncio
import os
import aiohttp
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=os.getenv('BOT_TOKEN'))
dp = Dispatcher()

@dp.message(Command("start"))
async def start_command(message: Message):
    await message.answer("üì∞ –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏: /news <—Ç–µ–º–∞>")
@dp.message(Command("news"))
async def get_news(message: Message):
    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
    args = message.text.split(maxsplit=1)
    topic = args[1] if len(args) > 1 else 'technology'
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    api_key = os.getenv('NEWS_API_KEY')
    if not api_key:
        await message.answer("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
        return
    # –§–æ—Ä–º–∏—Ä—É–µ–º URL –∑–∞–ø—Ä–æ—Å–∞
    url = f"https://newsapi.org/v2/everything?q={topic}&apiKey={api_key}&pageSize=3&language=ru"
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
                if response.status != 200:
                    return await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ API: {response.status}")
                # –ü–∞—Ä—Å–∏–º JSON
                data = await response.json()
                articles = data.get('articles', [])
                # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                if not articles:
                    return await message.answer("üîç –ù–æ–≤–æ—Å—Ç–µ–π –ø–æ —ç—Ç–æ–π —Ç–µ–º–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                response_text = "üìå –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏:\n\n"
                for i, article in enumerate(articles[:3], 1):
                    title = article['title'][:150] + '...' if len(article['title']) > 150 else article['title']
                    response_text += f"{i}. {title}\n{article['url']}\n\n"
                await message.answer(response_text)
                
    except Exception as e:
        await message.answer(f"üö® –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

async def main():
    await dp.start_polling(bot)
if __name__ == '__main__':
    asyncio.run(main())